#!/usr/bin/env bash

source "${DOTFILE_BASH_DIR}/vendor/git-prompt.sh"

# Prints out number of background and suspended jobs
jobscount() {
  local stopped=$(jobs -sp | wc -l | trim)
  local running=$(jobs -rp | wc -l | trim)
  ((running+stopped)) && echo -n "(${running}r/${stopped}s) "
}

# Prints dot if background jobs
jobsindicator() {
  (( $(jobs | wc -l) > 0 )) && echo -n "â˜‰ "
}

# Trims string
trim() {
  awk '{$1=$1};1'
}

# Creates a new bash scaffold script
n-bash() {
  cp "${DOTFILE_DIR}/scaffold/main.bash" "$@" && chmod +x "$@"
}

# Scaffold Makefile
n-makefile() {
  cp "${DOTFILE_DIR}/scaffold/Makefile.help" "Makefile"
}

# Load nvm
l-nvm() {
  [[ -s "$NVM_DIR/nvm.sh" ]] && source "$NVM_DIR/nvm.sh"
  [[ -s "$NVM_DIR/bash_completion" ]] && source "$NVM_DIR/bash_completion"
}

l-brew() {
  eval "$(/opt/homebrew/bin/brew shellenv)"
}

# Load rvm
l-rvm() {
  [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
  [[ -s "/etc/profile.d/rvm.sh" ]] && source "/etc/profile.d/rvm.sh"
}

# Load kubernetes environment
l-k8s() {
  source <(kubectl completion bash)
}

# Reload bash profile
function reload() {
  source ~/.bash_profile
}

# Launch HTTP Server
function server() {
  HTTP_PORT=${1:-8001}
  python -m SimpleHTTPServer $HTTP_PORT
}

# Stop and remove container
function drm () {
  docker stop $1 && docker rm $1
}

function dka () {
  docker kill $(docker ps -q) # Docker Kill All containers
}

function drma () {
  docker rm $(docker ps -a -q) # Docker ReMove All stopped containers
}

function drmai () {
  docker rmi $(docker images -q) # Docker ReMove All Images
}

function drmaf () {
  docker rm $(docker ps -a -q) -f # Docker ReMove All stopped containers (- force)
}

function drmai () {
  docker rmi $(docker images -q) -f # Docker ReMove All Images (- force)
}

function dsa() {
  docker stop $(docker ps -a -q) # Docker Stop All
}

# Calls interactive rebase going $0 commits back
function n() {
  git rebase -i HEAD~$1
}
